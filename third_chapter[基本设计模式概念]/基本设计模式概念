设计模式基本原则
    GOF("四人帮") 就是从MVC开始讨论设计模式中的各种工具的。他们将MVC的特点描述为：通过在视图和模型之间建立一个订购/通知协议，实现视图和模型的解耦合。不过，GOF继续指出，尽管很多设计模式和MVC有关，但还有大量模式与MVC物管，所以，我们并不是讨论以某种方式与MVC关联的设计模式，而更需要分析与MVC无关的设计模式。我们要研究一般意义上的设计模式原则，再分别讨论各个设计模式。
    第一个设计模式原则
    	第一个原则对于PHP来说有些困难：按接口而不是按实现编程。按接口而不是按实现变成是指，要将一个变量设置为一个抽象类或者接口数据类型的实例，而不是一个具体实现的实例。如果按接口编程，可以将设计与实现解耦合。
	在PHP中，不能申明一个变量的数据类型为抽象父类(抽象类或接口)，因为如果不实例化一个类实例，就不能申明数据类型。另外不能实例化一个抽象类的对象，通过使用以下格式化一个具体对象，变量可以得到一个数据类型。
	一个对象实例的数据类型不仅是它实例化的对象类型，该对象的父类也将作为它的数据类型。
    代码提示中使用接口数据类型
    抽象类及其接口
    	为了便于解释按接口而不是按实现编程的原则，这里的例子使用的接口interface创建的，不过要了解接口这个概念是指方法及其签名，而不是关键字interface。每个类都有一个接口，由其方法签名构成。由于大多数设计模式很少由一个具体类扩展，所以你要交接扩展一个抽象类就类似于实现一个接口。
    第二个设计模式原则
    	应该优先选择对象组合而不是类继承。有什么区别呢？这个说法并不是说要完全消除继承，实际上，这表示开发程序时如果有机会使用组合，应先使用组合，这样一来子类就不会因为继承大量不用的属性和方法而变得过度膨胀。
    使用客户的基本组合
    	例子
    IS-A和HAS-A的差别
    	在设计模式领域，你会看有些类的构造中使用了其他类。一个类将一个任务传递给另一个类时，这就是委托，正是这一点使组合拥有了强大的能力，
	使用继承，每一个子类是另一个类或多各类的一部分(IS-A关系)；而采用组合，对象可以使用一个不同的类或一组类完成一系列的任务（USE-A）任务，这并不是说不能使用继承。实际上，大多数设计模式同时包含有继承和组合。
    设计模式作为备忘录
    	设计模式的组织
	    这本书将沿用”四人帮“在《设计模式》一书中的设计模式组织。总的来说，设计模式按照作用和范围来组织的。
	    设计模式的作用可以分为3大类：
	        创建型，结构型，行为型
	    按范围划分：
	        类，队形
	各种模式的定义
    选择设计模式
    	是什么导致了重新设计
	什么会变化
	设计模式与框架有什么区别

